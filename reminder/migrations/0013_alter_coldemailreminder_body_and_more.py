# Generated by Django 4.0 on 2024-10-22 18:02

from django.db import migrations, models
import django.utils.timezone
import markdownx.models


class Migration(migrations.Migration):

    dependencies = [
        ('reminder', '0012_coldemailreminder_plain_body_and_more'),
    ]

    operations = [
        migrations.AlterField(
            model_name='coldemailreminder',
            name='body',
            field=markdownx.models.MarkdownxField(blank=True, help_text="Enter the email body using Markdown. Leave blank if you're using plain text."),
        ),
        migrations.AlterField(
            model_name='coldemailreminder',
            name='created_at',
            field=models.DateTimeField(default=django.utils.timezone.now, help_text='The date and time when the email reminder was created.'),
        ),
        migrations.AlterField(
            model_name='coldemailreminder',
            name='failure_count',
            field=models.IntegerField(default=0, help_text='The number of times the main email failed to send.'),
        ),
        migrations.AlterField(
            model_name='coldemailreminder',
            name='instant_send',
            field=models.BooleanField(default=False, help_text='Check this box if you want to send the email immediately.'),
        ),
        migrations.AlterField(
            model_name='coldemailreminder',
            name='max_reminders',
            field=models.IntegerField(default=3, help_text='Specify the maximum number of reminders to send. Default is 3.'),
        ),
        migrations.AlterField(
            model_name='coldemailreminder',
            name='plain_body',
            field=models.TextField(blank=True, help_text="Enter the plain text version of the email. Leave blank if you're using Markdown."),
        ),
        migrations.AlterField(
            model_name='coldemailreminder',
            name='plain_reminder_template',
            field=models.TextField(blank=True, help_text="Enter the plain text reminder template. Leave blank if you're using Markdown for reminders."),
        ),
        migrations.AlterField(
            model_name='coldemailreminder',
            name='recipients',
            field=models.CharField(help_text='Enter comma-separated email addresses to send the email to.', max_length=255),
        ),
        migrations.AlterField(
            model_name='coldemailreminder',
            name='reminder_count',
            field=models.IntegerField(default=0, help_text='The number of times reminders have been sent.'),
        ),
        migrations.AlterField(
            model_name='coldemailreminder',
            name='reminder_failure_count',
            field=models.IntegerField(default=0, help_text='The number of times the reminder email failed to send.'),
        ),
        migrations.AlterField(
            model_name='coldemailreminder',
            name='reminder_frequency',
            field=models.CharField(choices=[('same_day', 'Same Day'), ('daily', 'Daily'), ('after_1_day', 'After 1 Day'), ('after_2_days', 'After 2 Days'), ('after_3_days', 'After 3 Days'), ('weekly', 'Weekly'), ('no_reminder', 'No Reminder')], default='no_reminder', help_text="Select the frequency for sending reminders. Choose 'No Reminder' to disable reminders.", max_length=15),
        ),
        migrations.AlterField(
            model_name='coldemailreminder',
            name='reminder_template',
            field=markdownx.models.MarkdownxField(blank=True, help_text="Enter the Markdown reminder email template. Leave blank if you're using plain text for reminders."),
        ),
        migrations.AlterField(
            model_name='coldemailreminder',
            name='reminder_time',
            field=models.TimeField(blank=True, help_text='Specify the time to send the reminder, if a reminder is set.', null=True),
        ),
        migrations.AlterField(
            model_name='coldemailreminder',
            name='scheduled_time',
            field=models.DateTimeField(blank=True, help_text='Set the date and time to schedule the email sending.', null=True),
        ),
        migrations.AlterField(
            model_name='coldemailreminder',
            name='sent_count',
            field=models.IntegerField(default=0, help_text='The number of times the main email has been sent.'),
        ),
        migrations.AlterField(
            model_name='coldemailreminder',
            name='subject',
            field=models.CharField(help_text='Enter the subject of the email.', max_length=255),
        ),
    ]
